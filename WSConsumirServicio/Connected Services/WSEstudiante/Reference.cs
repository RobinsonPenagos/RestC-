//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WSConsumirServicio.WSEstudiante {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSEstudiante.WSCrearSoap")]
    public interface WSCrearSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSListado", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WSListado();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSListado", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WSListadoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSConsulta", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataSet WSConsulta(string Nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/WSConsulta", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataSet> WSConsultaAsync(string Nombre);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WSCrearSoapChannel : WSConsumirServicio.WSEstudiante.WSCrearSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WSCrearSoapClient : System.ServiceModel.ClientBase<WSConsumirServicio.WSEstudiante.WSCrearSoap>, WSConsumirServicio.WSEstudiante.WSCrearSoap {
        
        public WSCrearSoapClient() {
        }
        
        public WSCrearSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WSCrearSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSCrearSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WSCrearSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
        
        public System.Data.DataSet WSListado() {
            return base.Channel.WSListado();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WSListadoAsync() {
            return base.Channel.WSListadoAsync();
        }
        
        public System.Data.DataSet WSConsulta(string Nombre) {
            return base.Channel.WSConsulta(Nombre);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> WSConsultaAsync(string Nombre) {
            return base.Channel.WSConsultaAsync(Nombre);
        }
    }
}
